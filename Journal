Billy Luy
Period 6

Game: Retro Reflex Platformer
Libgdx API - http://libgdx.badlogicgames.com/nightlies/docs/api/

5/04/17
-Goal: Setting up android studio & Learn how to create a simple UI using Android Studio.
-Helpful links -http://www.androidauthority.com/android-app-development-complete-beginners-658469/
               -https://developer.android.com/studio/write/layout-editor.html
               -https://developer.android.com/training/basics/firstapp/building-ui.html
-Ended up not doing much because android studio didn't finish dowloading. Also need to dowload the java develper kit which is needed to run
android studio. I am going to dowload android studio at home and put it on a flash drive to see if i can start working on a ui tomorrow.

5/05/17
-Goal:Finish setting up android studio
-Finished setting up android studio and test so button constrants and ui layouts. Ran into an error of now being able to connect the project
to github though. Need to dowload github for windows?? in order for it to work.

5/08/17
-Goal:Set up android studio with Github, finish making a simple ui for the game.
-Helpful links -https://help.github.com/articles/set-up-git/
               -http://stackoverflow.com/questions/26979914/how-to-add-android-project-to-github
-ran into multiple problems today. First, the cpu on our computer can't support the emulator, so we can't test anything unless we plug our
actually phones and test it there. another problem is taht github still isn't working and we can't really find a way to fix this problem.

5/09/17
-Goal- set up github & start creating a simple ui for testing
-We have succesfully connected our Android Studio project to github, so now we can pull and push the project, so multiple peopel can work
on it at the same time. Also, we finished setting up a simple ui so we can see the differnce between coding in android. We still have a lot
about android and android studio's differences between eclipse.

5/10/17
-Goal - Get Libgdx to work with android studio so we can use the libraries it already has instead of making our own.
-Helpful links -http://www.programmingmoney.com/setup-libgdx-android-studio/
               -http://www.java-gaming.org/index.php?topic=32347.0
-using a game framework is very useful because you don't have to start from stracth. This allows us to focus on the game and not the
complication of making a game engine. A very useful thing that libgdx includes is a way for images to fit differnt screens. This was a
problem we were facing before but libgdx has a method called FitViewport which creates black bars on screens that are to big. Libgdx
has many other useful methods as well that we can you to help make the game a lot better than it would be if we were to spend most
of our time making a game engine that probably wouldn't be as good. For next time, im planned to get libgdx to work with android studio
so i can make a project using libgdx instead of making an entire game engine.

5/11/17
-Goal - Set up android studio with Libgdx
-Finished setting up android studio with Libgdx so now we can work on our project and adding classes and screens to the project.
Next we need to work on learning Libgdx and the many functions it provides for us to use.

5/12/17
-Goal - Learn more about Libgdx and how to implement it into our android project
-Learned about how libgdx uses a specific way of doing things. This is sort of learnign a whole new language becasue you need to learn
how all the classes are used and read on how they are implemented. Even though android is coded in Java, libgdx is like coding in 
a whole new language. I learned how libgdx uses a class called batch to draw things onto the screen and about all the differnt
viewports and cameras used to make the screen relative and scretchable. Also, libgdx has a special way of loading up maps which can be
used very effectively to make collison and other entities precise to the exact pixel.

5/15/17
-Goal - create a hud for the game
-made a hud for the game so that there is a constant camera set. This means that as the character moves around, that one object
on the screen will never move. This object can be updated. Today i just made a hud for the game level.

5/16/17
-Goal - get map to load correctly and finish hud
-made final adjustments to the hud so it is ready to run now. The only problem now is working on the map and getting it to run.
We ran into a big problem, not getting the map to run or render. The hud is working fine and is loading properly. But once we try to load 
the map, all we get is a black screen and the hud. There aren'y any error messages so it's hard to check what the problem is. We have 
spend the whole time trying to find solutions online

5/17/17
-Goal - get the map to load
-we finally got a working map to load. The problem was that Libgdx uses specific pixel sizes and wont recongize anything else. this is
problems for us and wont load the map. we fixed it by fixing the pixel sizes

5/22/17
-Goal - Fix map and camera position
-We fixed the map making it compatible with Libgdx and able to render. Also, because we had to change the map around, we also had
to fix the camera position so that the game would start at the correct part of the map. We did this by setting the camera to the top
left starting position. Also worked on outlining the ground so we can use it for collision.

5/23/17
-Goal- create the player class
-started creating the player, using Box2D as a way to have collision and physics. Didn't complete creating the player class but started
to implement Box2D into it.

5/24/17
-Goal- finish creating the player
-finished creating the player, with physics added to it. But as we changed the map sizes so that the phyics works, we ran into problems
with the map again. We needed to change from pixels to meters because libgdx runs it's physics simulation off of meters. This caused
problems again because our map was sized specific to pixels.

5/25/17
-Goal - get the map to render with the changed sizes
-didn't get the map to render. Changing the sizes from pixels to meters has caused errors and made the camera wrong again. We need to
fix the camera so it will see the map even with the changed screen sizes.

5/26/17
-Goal - change the sizes of the map and clean up the code
- We finialy got the size to load with the changed sizes of the map to meters instead of pixels by dividing all the pixel values by
100 to get a meter value. Also, we started cleaning up the code and making seperate functions and classes for all the differnt parts.

5/30/17
-Goal - set working on collision
- We have almost compelted the collision. All we need to do now is actually do something when the player collides. This should be fairly
easy becasue we already made printing methods for the collision. Also, we cleaned up the code and made seperate classes for every object
on the map. Before we just put everything into the playerscreen class which made it clutterd.

5/31/17
-Goal-work on disappearing tiles
- ran into small errors, might have to rewrite some of the code again so we can use functions effectively. Also, we have to figure out a
way to delete certain graphics once collision occurs. This is quite dfficult because we have to use libgdx's way to masking bits. this
whole concept is pretty difficult to understand since it's dealing with variables and changing it's "mask".

6/1/17
-Goal- finish disappearing tiles
- We got a lot of progress done. Not only did we finish the disappearing tiles, we also completed a double jump coin. WE used the api and 
stackoverflow to find out that we can use sensors which detects collision but also ignores the physics part of it. So this made the coins
be able to detect collision but also not actually collide with the character, making the collection of coins possible and fluid.

6/2/17
-Goal- work on map
- Because there wasn't a lot of time to work on this today, all I did was make minor changes to the map and the objects to make the map
playable. This was just for the tutorial stage, we also have to make the other stages aswell.

6/5/17
-Added a new spirte which will later be used for moving spikes. Also, fixed errors with a controller we added and rendering of a new 
sprite.

6/6/17
-Goal- work on the new sprite so collisoin will kill player
-started working on the contact listener to make the sprite interact with each other. Also, worked on destroying the spike when it
touches the ground, so it would block the map.

6/7/17
-Goal- finish working on new sprite collision
-We completed the moving spikes and are able to have it dissapear after collision with player or the ground. The spike checks the player's
coordinates and determines whether or not if it should move. Also, we completed a end screen and started working on a save tile.
